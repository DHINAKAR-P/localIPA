/**
 *
 * @author Schubert Generated Code</br>
 * Date Created: </br>
 * @since  </br>
 build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
 */

app.controller('Authentication', ['$scope', '$rootScope', '$location', '$state', '$window', '$q', '$http', '$ionicPopup', 'RestURL', 'People_testId', 'Settings', 'OpenFB','surveyService','$timeout',
    function ($scope, $rootScope, $location, $state, $window, $q, $http, $ionicPopup, RestURL, People_testId, Settings, OpenFB,surveyService,$timeout) {
        var self = $scope;

        self.GPlusLogin = function () {
            try {
                if ($rootScope.env == 'DEV') {
                    $scope.showAlert('Not allowed in Development Environment!');
                } else {
                    $window.plugins.googleplus.login(
                        {},
                        function (obj) {
                            $scope.showAlert("SUCCESS LOGIN: " + obj.email);
                            $state.go('home');
                            //document.querySelector("#feedback").innerHTML = "Hi, " + obj.displayName + ", " + obj.email;
                        },
                        function (msg) {
                            $scope.showAlert("ERROR: " + msg);
                            $state.go('home');
                        }
                    );
                }
            } catch (d) {
                console.log("ERRROR......." + d);
            }
        };

        $scope.facebookLogin = function () {
            if ($rootScope.env == 'DEV') {
                $scope.showAlert('Not allowed in Development Environment!');
            } else {
                OpenFB.login('email').then(
                    function () {
                        OpenFB.get('/me').success(function (user) {
                            $scope.showAlert("FB login succeeded" + user.id);
                            $state.go('home');
                        });
                    },
                    function (msg) {
                        $scope.showAlert("OpenFB login failed" + msg);
                        $state.go('home');
                    });
            }
        };
         self.signIn = function (login) {
            console.log('Sign In');
                 
            //$state.go('app_level');
            var user = {
                "email": self.login.email,
                "passWord": self.login.password
            };
            var loginResult=surveyService.login(user.email,user.passWord);
            //console.log("loginResult----------"+angular.toJson(loginResult));
        $timeout(function(){ 
            console.log("loginResult----------"+angular.toJson(loginResult));
            if(loginResult != null &&  loginResult != ''){
                console.log("succes");                 
                         $state.go('app_level')     
            }else{
                   alert("fails login");

            }
        },900);             
           /* $http.post(RestURL.baseURL + 'login/loginValidation/', user)
                .success(function (data) {
                    console.log('hello friend');
                    console.log(data);
                    if (data.responseSuccess === 'success') {
                        Settings.global = data.result[0];
                        // redirect
                        $state.go('app_level');
                    } else {
                        $ionicPopup.alert({
                            title: 'Login Failed',
                            template: 'Invalid email or password'
                        });
                    }
                })
                .error(function (error) {
                    console.warn('Sign In failed');
                    console.warn(error);
                });*/
        };


        // Put this process inside a function
        // hard-coded

        self.emailAndPassword = function () {
            // clear old data
            Settings.global = {};

            // validation
            if (self.email && self.password) {
                // create new profile
                Settings.global = {
                    "email": self.email,
                    "first_name": "user",
                    "last_name": "profile",
                    "phone_number": 0,
                    "password": self.password,
                    "old_password": "",
                    "user_type": "CUSTOMER",
                    "organization": {
                        "base_organisation_id": "3"
                    },
                    "logged_in": false
                };

                // redirect
                $state.go('organization');
            }
        };

        self.signUp = function () {
            var user;
            Settings.global.logged_in = true;
            user = {
                "details": "",
                "gender": Settings.global.gender,
                "name": "",
                "user": {
                    "organisation": Settings.global.organization,
                    "email": Settings.global.email,
                    "passWord": Settings.global.password,
                    "userType": "CUSTOMER",
                    "firstName": Settings.global.first_name,
                    "lastName": Settings.global.last_name,
                    "phoneNumber": Settings.global.phone_number
                }
            };

            console.log('CUSTOMER: ', user);

            $http.post(RestURL.baseURL + 'customer/create/', user)
                .success(function (data) {
                    console.log('CUSTOMER Created');
                    console.log(data);

                    // automatic sign in after registration
                    var user = {
                        "email": data.user.email,
                        "passWord": data.user.passWord
                    };

                    $http.post(RestURL.baseURL + 'login/loginValidation/', user)
                        .success(function (data) {
                            console.log(data);
                            if (data.responseSuccess === 'success') {
                                Settings.global = data.result[0];
                                // redirect
                                $state.go('profile');
                            } else {
                                $ionicPopup.alert({
                                    title: 'Login Failed',
                                    template: 'Invalid email or password'
                                });
                            }
                        })
                        .error(function (error) {
                            console.warn('Sign In failed');
                            console.warn(error);
                        });
                })
                .error(function (error) {
                    console.log('Sign Up failed');
                    console.warn(error);
                });

                
        };

        self.go = function (url) {
            $state.go(url);
        };

        self.showAlert = function (msg) {
            var alertPopup = $ionicPopup.alert({
                title: 'Result: ',
                template: msg
            });
            alertPopup.then(function (res) {
                console.log('Thanks');
            });
        };
                self.getRoute =function(){         
        };
        self.init = function(){
           console.log("------------------in getRoutes Method");
           self.routesList = surveyService.getRoutes();
           self.storeList=  surveyService.getStore();
           console.log("------------------init route list"+angular.toJson(self.routesList));
        };

        self.init();
    }]);